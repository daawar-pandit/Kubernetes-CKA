# This YAML defines a Redis Pod with tolerations to run on nodes with specific taints

# API version and resource type
apiVersion: v1    # Core Kubernetes API version
kind: Pod         # Defines this as a Pod resource

# Pod metadata
metadata:
  labels:         # Labels for identifying the Pod
    run: redis    # Label to identify this as a redis pod
  name: redis     # Unique name for the Pod

# Pod specification
spec:
  containers:     # List of containers in the pod
  - image: redis  # Redis container image to use
    name: redis   # Container name
    resources: {} # No specific resource limits set
  
  dnsPolicy: ClusterFirst    # Use cluster's DNS service
  restartPolicy: Always      # Always restart container if it stops
  
  # Toleration configuration allows pod to run on nodes with matching taints
  tolerations:
  - key: "gpu"              # Matches taint key
    operator: "Equal"       # Requires exact match of values
    value: "true"          # Matches taint value
    effect: "NoSchedule"    # Tolerates NoSchedule effect

# Usage Instructions:
# 1. First, taint the target node:
#    kubectl taint nodes desktop-worker gpu=true:NoSchedule
# 2. Apply this pod configuration:
#    kubectl apply -f redis.yaml
# 3. Verify pod placement:
#    kubectl get pods -o wide
#    kubectl describe pod redis